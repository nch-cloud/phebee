openapi: "3.0.1"
info:
  title:
    Fn::Sub: "phebee-${AWS::AccountId}-${AWS::Region}-${AWS::StackName}"
  version: "2020-11-06 15:32:29UTC"

paths:
  # --- Project-related endpoints ---
  /project:
    post:
      summary: Create a new project node
      description: |
        Creates a new project node in the PheBee graph if it does not already exist.
        Requires a JSON payload with `project_id` and `project_label`. If the project
        already exists, the request returns a message indicating no changes were made.
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
                - project_label
              properties:
                project_id:
                  type: string
                project_label:
                  type: string
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-CreateProjectFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /project/remove:
    post:
      summary: Remove all data for a project
      description: |
        Deletes all RDF triples associated with the specified project by clearing its named graph
        in the Neptune database.
      operationId: removeProjectData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
              properties:
                project_id:
                  type: string
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-RemoveProjectFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  # --- Subject-related endpoints ---
  /subject:
    post:
      summary: Create or link a subject
      description: |
        Creates a new subject in PheBee or links an existing one to a specified project.
        If a subject with the given identifiers already exists, it is linked to the new project;
        otherwise, a new subject is created and recorded.
      operationId: createOrLinkSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
                - project_subject_id
              properties:
                project_id:
                  type: string
                project_subject_id:
                  type: string
                known_project_id:
                  type: string
                known_project_subject_id:
                  type: string
                known_subject_iri:
                  type: string
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-CreateSubjectFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /subject/details:
    post:
      summary: Retrieve subject details and associated terms
      description: |
        Returns metadata and linked terms for a subject, including evidence supporting each association.
        Requires a project ID and a project-specific subject ID to identify the subject in the graph.
      operationId: getSubjectDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
                - project_subject_id
              properties:
                project_id:
                  type: string
                project_subject_id:
                  type: string
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-GetSubjectFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /subject/remove:
    post:
      summary: Remove a subject from the graph
      description: |
        Deletes all RDF triples involving the specified subject, either as the subject or object,
        effectively removing it from the graph.
      operationId: removeSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
                - project_subject_id
              properties:
                project_id:
                  type: string
                project_subject_id:
                  type: string
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-RemoveSubjectFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /subjects/query:
    post:
      summary: Query subject data with optional filters and export
      description: |
        Returns structured subject data for a given project. Supports filters like subject IDs, terms,
        and flags for phenotypes, evidence, and descendants. Optionally exports results to S3 if
        `output_s3_path` is provided.
      operationId: querySubjects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
              properties:
                project_id:
                  type: string
                project_subject_ids:
                  type: array
                  items:
                    type: string
                term_iri:
                  type: string
                term_source:
                  type: string
                term_source_version:
                  type: string
                return_excluded_terms:
                  type: boolean
                include_descendants:
                  type: boolean
                include_phenotypes:
                  type: boolean
                include_evidence:
                  type: boolean
                optional_evidence:
                  type: object
                return_raw_json:
                  type: boolean
                output_s3_path:
                  type: string
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-GetSubjectsFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /subjects/phenotypes:
    post:
      summary: List subjects and their phenotypes for a project
      description: |
        Returns a list of subjects associated with a project. Optionally filters subjects by a given term
        and includes their linked phenotypic terms.
      operationId: getSubjectsWithPhenotypes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project_id
              properties:
                project_id:
                  type: string
                term_source:
                  type: string
                term_source_version:
                  type: string
                term_iri:
                  type: string
                include_terms:
                  type: boolean
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-GetSubjectsPhenotypesFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  # --- Term & link-related endpoints ---
  /subject-term-link:
    post:
      summary: Link a subject to a term with evidence
      description: |
        Associates a subject with a term in the PheBee graph. If the link does not yet exist, it is created.
        Evidence metadata is required for each link and is stored alongside the association.
      operationId: createSubjectTermLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                evidence_list:
                  type: array
                  items:
                    type: object
                    required:
                      - project_id
                      - project_subject_id
                      - term_iri
                      - evidence
                    properties:
                      project_id:
                        type: string
                      project_subject_id:
                        type: string
                      term_iri:
                        type: string
                      evidence:
                        type: object
                evidence_s3_path:
                  type: string
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-CreateSubjectTermLinkFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /source/{source_name}:
    get:
      summary: Get term source metadata
      description: |
        Retrieves metadata about a specific term source registered in PheBee.
        The response includes details such as version, creation date, graph name, and downloaded file locations.
      operationId: getSourceMetadata
      parameters:
        - name: source_name
          in: path
          required: true
          schema:
            type: string
          description: The name of the data source to retrieve information about.
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-GetSourceInfoFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /encounter/create:
    post:
      summary: Create an encounter node
      description: |
        Creates an Encounter node for the given subject IRI and encounter ID.
        The resulting node IRI is returned in the response.
      operationId: createEncounter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject_iri
                - encounter_id
              properties:
                subject_iri:
                  type: string
                encounter_id:
                  type: string
      responses:
        "200":
          description: Encounter created
        "400":
          description: Missing required fields
        "500":
          description: Internal server error
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-CreateEncounterFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /encounter:
    post:
      summary: Retrieve encounter node details
      description: |
        Fetches properties of an encounter based on subject IRI and encounter ID.
        Returns the encounter IRI and its associated unprefixed properties.
      operationId: getEncounter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject_iri
                - encounter_id
              properties:
                subject_iri:
                  type: string
                encounter_id:
                  type: string
      responses:
        "200":
          description: Encounter found
        "400":
          description: Missing required fields
        "404":
          description: Encounter not found
        "500":
          description: Internal server error
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-GetEncounterFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

  /encounter/remove:
    post:
      summary: Remove an encounter node
      description: |
        Deletes an Encounter node identified by subject IRI and encounter ID.
      operationId: removeEncounter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject_iri
                - encounter_id
              properties:
                subject_iri:
                  type: string
                encounter_id:
                  type: string
      responses:
        "200":
          description: Encounter deleted
        "400":
          description: Missing required fields
        "500":
          description: Internal server error
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [PheBeeAPIRole, Arn]
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-RemoveEncounterFunction/invocations
        connectionType: "INTERNET"
        timeoutInMillis: 30000

x-amazon-apigateway-cors:
  allowMethods:
    - "*"
  maxAge: 0
  allowCredentials: false
  allowOrigins:
    - "*"
  allowHeaders:
    - "*"
x-amazon-apigateway-importexport-version: "1.0"
